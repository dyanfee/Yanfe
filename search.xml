<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[pandas学习笔记]]></title>
    <url>%2F2019%2F04%2F14%2Fpandas%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[pandas 数据读取 123456789101112import pandasdata = pandas.read_csv(path) #打开csv数据data.dtypes #内含数据类型data.head(num) #从头显示数据 num显示数据的条数data.tail(num) #从最后显示数据 data.columns #返回列名data.shape() #返回数据行列数data.loc[num] #返回某一条数据 num数据行数索引data.loc[start:end] #返回多条数数据data[row_name] #返回某一列 row_name列名data[[name1,name2]] #返回多列pandas.isnull(data[row_name]) #返回列中每个值是否为缺失值 数据运算1234data[row_name].max() #返回某一列最大值data[row_name1]*data[row_name2] #两列元素对应相乘data[row_name]/1000 #列中每个元素都除1000data[row_name].mean() #求指定列的均值 数据排序12data.sort_values(row_name,inplace=True,ascending = False) #按指定列进行排序 implace是否输出新的DataFrame ascending是否升序]]></content>
      <tags>
        <tag>Python</tag>
        <tag>pandas</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[numpy学习笔记]]></title>
    <url>%2F2019%2F04%2F14%2Fnumpy%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%2F</url>
    <content type="text"><![CDATA[矩阵的读取numpy.getfromtxt(path,delimiter,dtype) 打开txt文件 类型为ndarray dtype指定数据类型 vector = numpy.array(list) 传入一维数组或– vector.shape vector 的行列值 vector.dtype vector 中每个元素的类型 vector.astype(type) 转换vector内值的类型 matrix.sum(axis=1) 对每行求和 axis=0 是对列求和 numpy.arange(15).reshape(3,5) 将一个一维数组转换为3行5列的二维数组 vector.ndim vector的维度 numpy.zeros((3,4)，dtype) 构造3行5列的空矩阵，dtype指定类型，numpy.ones 构造值为1 的矩阵 numpy.random.random((2,3)) 构造随机矩阵，范围为0-1 numpy.linspace(0,2*pi,100) 构造一个从0开始到2π，个数为100的矩阵 12345A = numpy.array([[2,3],[4,1]])B = numpy.array([[1,1],[3,1]])A*BA.dot(B)numpy.dot(A,B) A*B 两矩形对应位置相乘 A.dot(B) 或 numpy.dot(A,B) 矩阵点乘 12numpy.exp(B)numpy.sqrt(B) exp 表示e的B次幂 ，sqrt 求根号B 12345a = numpy.floor(10*numpy.random.random((3,4)))a.ravel()a.shape=(6,2) #将矩阵转为6×2的矩阵a.T #转置a.reshape(3,-1) #将矩阵转为3×n 的矩阵 n会自动计算 ravel() 将矩阵转为一维数组 矩阵的拼接操作123456a = numpy.floor(10*numpy.random.random((2,2)))b = numpy.floor(10*numpy.random.random((2,2)))#拼接操作numpy.hstack((a,b)) #横着拼numpy.vstack((a,b)) #竖着拼 12345678a = numpy.floor(10*numpy.random.random((2,12)))# 分割操作numpy.hsplit(a,3) #分割为3个矩阵 numpy.hsplit(a,(3,4)) # 对行的指定位置进行切分numpy.vsplit(a.T,3)numpy.vsplit(a.T,(3,4)) 矩阵复制操作 简单指向 123a = numpy.arange(12) b = a #将b指向a 浅复制 1c = a.view() #a与c的值是公用的 深复制 1d = a.copy() #完全复制 矩阵的排序12345data = numpy.sin(numpy.arange(20)).reshape(5,4)ind = data.argmax(axis=0) #返回每列最大值所在的行数data_max = data[ind,range(data.shape[1])] #返回每列最大值 12345a = numpy.array([[5,3,4],[1,2,1]])b = numpy.sort(a,axis=1) #对每行进行排序a = numpy.array([2,3,5,1])b = numpy.argsort(a) # 返回排序后的索引 矩阵扩展123a = numpy.arange(0,40,10)b = numpy.title(a,(2,3)) #行变为两倍 列变为两倍]]></content>
      <tags>
        <tag>numpy</tag>
        <tag>Python</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[你好！]]></title>
    <url>%2F2019%2F04%2F07%2F%E4%BD%A0%E5%A5%BD%EF%BC%81%2F</url>
    <content type="text"><![CDATA[后来的我们各自奔向远方 曾经以为日子很长，突然发现，时间过得飞快，在这个年龄，开始茫然！]]></content>
      <categories>
        <category>picture</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>picture</tag>
        <tag>test</tag>
        <tag>nodejs</tag>
        <tag>Typescript</tag>
      </tags>
  </entry>
</search>
